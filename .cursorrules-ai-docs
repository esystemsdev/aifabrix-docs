# AI-Powered Documentation Generation Rules

## Project Context

- **Purpose**: Generate and maintain customer-facing documentation using AI analysis of internal source repositories
- **Source Repos**: aifabrix-miso, esystems-token-service, Flowise, openwebui-template
- **Target**: Customer-safe documentation in aifabrix-docs repository
- **Process**: Manual AI generation → Human validation → Document360 sync

## Source Repository Analysis

### Included Content

- **Architecture documentation** (system design, components, integrations)
- **API references** (endpoints, schemas, examples)
- **User guides** (getting started, tutorials, workflows)
- **Configuration guides** (setup, deployment, configuration)
- **Security documentation** (authentication, RBAC, compliance)

### Excluded Content (Internal Only)

- **Plans folders** (`docs/plans/`, `docs/development/`)
- **Internal specifications** (development specs, implementation details)
- **Project management docs** (task lists, implementation plans)
- **Internal reports** (validation reports, analysis documents)
- **Development workflows** (internal CI/CD, developer processes)

### Repository Priority

1. **aifabrix-miso** - Core platform architecture and user guides
2. **aifabrix-core** - AI Fabrix Enterprise Flowise
3. **openwebui-template** - User interface and experience
4. **flowise-template** - Flowise template and examples for AI workflow development
5. **aifabrix-plugins** - Plugin development and extensions
6. **aifabrix-mori** - Backend services and subscription management (internal only)

## AI Documentation Generation Rules

### Content Transformation

- **Remove Internal References**: Replace internal IDs, secrets, and sensitive information with placeholders
- **Customer-Safe Language**: Use customer-facing terminology, avoid internal jargon
- **Consistent Structure**: Follow established documentation patterns and YAML metadata standards
- **Audience-Appropriate**: Tailor content depth to target audience (executive, architect, developer, user)

### Quality Standards

- **Accuracy**: Ensure technical accuracy while making content customer-appropriate
- **Completeness**: Include all relevant customer-facing information
- **Consistency**: Maintain consistent terminology and structure across all documentation
- **Clarity**: Use clear, actionable language suitable for the target audience

### Metadata Management

- **YAML Files**: Always create corresponding `.yaml` metadata files
- **Required Fields**: title, description, audience, tags, labels, related_articles
- **SEO Fields**: meta_title, keywords, canonical_url, og_image
- **Repository Context**: source repository, path, type, last_updated
- **Document360 Fields**: category, visibility, searchable, featured, order

## Manual Workflow Process

### Step 1: Source Analysis

```yaml
Analyze changes in source repositories:
- Check for new documentation files
- Identify modified existing documentation
- Review content for customer-facing relevance
- Extract key information and structure
```

### Step 2: AI Generation

```yaml
Generate customer-facing documentation:
- Transform internal content to customer-safe language
- Maintain consistent structure and formatting
- Create appropriate YAML metadata
- Ensure audience-appropriate content depth
```

### Step 3: Human Validation

```yaml
Review generated documentation:
- Verify technical accuracy
- Check for customer-safe content
- Validate YAML metadata completeness
- Ensure consistent terminology and structure
- Approve for Document360 sync
```

### Step 4: Documentation Update

```yaml
Update master documentation:
- Replace existing content with validated version
- Update YAML metadata files
- Maintain version control and change tracking
- Prepare for Document360 synchronization
```

## Content Generation Patterns

### Architecture Documentation

- **Source**: `aifabrix-miso/docs/architecture/`
- **Target**: `docs/architecture/`
- **Audience**: architect, developer
- **Focus**: System design, components, integrations, security

### User Guides

- **Source**: `aifabrix-miso/docs/user-guides/`, `aifabrix-miso/docs/getting-started/`
- **Target**: `docs/getting-started/`, `docs/user-guides/`
- **Audience**: user, developer
- **Focus**: Step-by-step procedures, tutorials, workflows

### API Documentation

- **Source**: `esystems-token-service/docs/API_REFERENCE.md`, `aifabrix-miso/docs/reference/`
- **Target**: `docs/api/`
- **Audience**: developer
- **Focus**: Endpoints, schemas, examples, authentication

### Security Documentation

- **Source**: `aifabrix-miso/docs/architecture/security-authentication.md`, `esystems-token-service/docs/RBAC_*.md`
- **Target**: `docs/security/`
- **Audience**: security, architect, administrator
- **Focus**: Authentication, RBAC, compliance, best practices

## Change Detection Strategy

### Manual Triggers

- **New Features**: When new functionality is added to source repos
- **Architecture Changes**: When system design or components change
- **Security Updates**: When authentication or security models change
- **API Changes**: When endpoints, schemas, or authentication change

### Future CI/CD Integration

- **GitHub Webhooks**: Monitor source repository changes
- **Automated Analysis**: AI-powered change detection and content generation
- **Approval Workflow**: Human validation before publishing
- **Document360 Sync**: Automated synchronization of approved content

## Quality Assurance

### Pre-Generation Checklist

- [ ] Source content is customer-facing relevant
- [ ] Internal references are identified for removal
- [ ] Target audience is clearly defined
- [ ] Related documentation is identified

### Post-Generation Validation

- [ ] Technical accuracy verified
- [ ] Customer-safe content confirmed
- [ ] YAML metadata complete and correct
- [ ] Consistent terminology and structure
- [ ] No internal references or sensitive information
- [ ] Appropriate content depth for target audience

### Documentation Standards

- **Structure**: Follow established patterns and hierarchy
- **Language**: Clear, actionable, customer-appropriate
- **Metadata**: Complete YAML files with all required fields
- **Links**: Proper internal linking and cross-references
- **Images**: Customer-safe diagrams and screenshots

## Error Handling

### Common Issues

- **Internal References**: Replace with customer-safe placeholders
- **Missing Context**: Add appropriate background information
- **Inconsistent Terminology**: Use established customer-facing terms
- **Incomplete Metadata**: Ensure all required YAML fields are present

### Validation Failures

- **Technical Inaccuracy**: Review source content and regenerate
- **Customer Safety**: Remove or replace sensitive information
- **Structure Issues**: Follow established documentation patterns
- **Metadata Problems**: Complete missing or incorrect YAML fields

## Future Enhancements

### Phase 2: Automated CI/CD

- **GitHub Actions**: Automated change detection and generation
- **Approval Workflow**: Structured human validation process
- **Quality Gates**: Automated checks for content quality and safety
- **Document360 Integration**: Seamless synchronization pipeline

### Phase 3: Advanced AI Features

- **Cross-Repository Intelligence**: Merge information from multiple sources
- **Context-Aware Generation**: Understand relationships between different documentation
- **Automated Quality Scoring**: AI-powered content quality assessment
- **Predictive Updates**: Anticipate documentation needs based on code changes

## Usage Examples

### Generate Architecture Documentation

```yaml
Analyze: ../aifabrix-miso/docs/architecture/miso-controller.md
Generate: docs/architecture/miso-controller.md + .yaml
Audience: architect, developer
Focus: System architecture, components, integrations
```

### Update User Guide

```yaml
Analyze: ../aifabrix-miso/docs/user-guides/portal-usage.md
Update: docs/user-guides/portal-usage.md + .yaml
Audience: user
Focus: Step-by-step procedures, screenshots, troubleshooting
```

### Create API Reference

```yaml
Analyze: ../esystems-token-service/docs/API_REFERENCE.md
Generate: docs/api/token-service.md + .yaml
Audience: developer
Focus: Endpoints, authentication, examples, error handling
```

Remember: This is a manual process initially. Focus on quality and consistency. Once stable, we'll automate the workflow with CI/CD integration.
