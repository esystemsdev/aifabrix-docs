name: Deploy Documentation to GitHub Pages

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Setup Python (for YAML validation)
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install dependencies
        run: |
          pip install pyyaml
          
      - name: Validate documentation structure
        run: |
          echo "üîç Validating documentation structure..."
          
          # Check if docs directory exists
          if [ ! -d "docs" ]; then
            echo "‚ùå docs directory not found"
            exit 1
          fi
          
          # Validate YAML files
          echo "üìã Validating YAML metadata files..."
          find docs -name "*.yaml" -type f | while read yaml_file; do
            echo "  Validating: $yaml_file"
            if ! python3 -c "import yaml; yaml.safe_load(open('$yaml_file'))" 2>/dev/null; then
              echo "‚ùå Invalid YAML in $yaml_file"
              exit 1
            fi
          done
          
          # Validate markdown files
          echo "üìù Validating markdown files..."
          find docs -name "*.md" -type f | while read md_file; do
            echo "  Validating: $md_file"
            if [ ! -s "$md_file" ]; then
              echo "‚ùå Empty markdown file: $md_file"
              exit 1
            fi
          done
          
          echo "‚úÖ All validation checks passed"
          
      - name: Build documentation site
        run: |
          echo "üèóÔ∏è Building documentation site..."
          
          # Create output directory
          mkdir -p _site
          
          # Copy all documentation files
          cp -r docs _site/
          cp *.md _site/ 2>/dev/null || true
          
          # Create simple index.html
          cat > _site/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>AI Fabrix Documentation</title>
              <style>
                  body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; margin: 0; padding: 20px; background: #f8f9fa; }
                  .container { max-width: 1200px; margin: 0 auto; background: white; padding: 40px; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
                  h1 { color: #2c3e50; border-bottom: 3px solid #3498db; padding-bottom: 10px; }
                  .notice { background: #e3f2fd; border: 1px solid #2196f3; border-radius: 8px; padding: 20px; margin-bottom: 30px; }
                  .notice h2 { color: #1976d2; margin-top: 0; }
                  .file-list { background: #f8f9fa; padding: 20px; border-radius: 8px; margin: 20px 0; }
                  .file-item { margin: 10px 0; padding: 15px; background: white; border-radius: 6px; border-left: 4px solid #3498db; }
                  .file-item a { text-decoration: none; color: #2c3e50; font-weight: 500; }
                  .file-item a:hover { color: #3498db; }
                  .metadata { font-size: 0.9em; color: #7f8c8d; margin-top: 5px; }
              </style>
          </head>
          <body>
              <div class="container">
                  <div class="notice">
                      <h2>üìã Documentation Preview</h2>
                      <p><strong>This is a preview of the AI Fabrix documentation.</strong></p>
                      <p>The official documentation is published to the <strong>Document360 portal</strong> where it's properly formatted, searchable, and includes interactive features.</p>
                      <p><strong>üîó Official Documentation:</strong> <a href="https://docs.aifabrix.ai">Visit Document360 Portal ‚Üí</a></p>
                  </div>
                  
                  <h1>üöÄ AI Fabrix Documentation</h1>
                  <p>Welcome to the AI Fabrix documentation preview. Browse the files below:</p>
                  
                  <div class="file-list">
                      <h3>üìö Documentation Files</h3>
                      $(find docs -name "*.md" -type f | while read file; do
                          filename=$(basename "$file" .md)
                          title=$(echo "$filename" | sed 's/-/ /g' | sed 's/\b\w/\U&/g')
                          echo "<div class=\"file-item\"><a href=\"$file\">$title</a><div class=\"metadata\">$file</div></div>"
                      done)
                  </div>
                  
                  <div class="file-list">
                      <h3>üìä Repository Files</h3>
                      $(find . -maxdepth 1 -name "*.md" -type f | while read file; do
                          filename=$(basename "$file" .md)
                          title=$(echo "$filename" | sed 's/-/ /g' | sed 's/\b\w/\U&/g')
                          echo "<div class=\"file-item\"><a href=\"$file\">$title</a><div class=\"metadata\">$file</div></div>"
                      done)
                  </div>
                  
                  <div class="file-list">
                      <h3>üìù Last Updated</h3>
                      <p>Documentation last updated: <strong>$(date)</strong></p>
                      <p>Repository: <a href="https://github.com/${{ github.repository }}">${{ github.repository }}</a></p>
                      <p>Commit: <a href="https://github.com/${{ github.repository }}/commit/${{ github.sha }}">${{ github.sha }}</a></p>
                  </div>
              </div>
          </body>
          </html>
          EOF
          
          echo "‚úÖ Documentation site built successfully"
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '_site'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
